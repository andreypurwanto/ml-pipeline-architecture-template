version: '3.1'

services:
  nginx:
    image: nginx:1.15
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - serve-network
    depends_on:
      - flask

  flask:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: flask
    env_file:
      - .env
    command: gunicorn --bind 0.0.0.0:8000 --workers 1 "app.main:app"
    volumes:
      - ./:/var/www
    networks:
      serve-network:
        aliases:
          - flask-app
          
  prometheus:
    image: bitnami/prometheus
    ports:
      - '9090:9090'
    container_name: prometheus
    restart: always
    volumes:
      - './prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml'
      - 'prometheus_data:/opt/bitnami/prometheus/data'
    networks:
      - serve-network
    depends_on:
      - nginx

  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
    volumes:
      - './grafana/grafana.ini:/etc/grafana/grafana.ini'
      - './grafana/provisioning/datasources:/etc/grafana/provisioning/datasources'
      - './grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards'
    networks:
      - serve-network

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - 27017:27017
    env_file:
      - .env
    volumes:
      - mongo_data:/data/db
      - mongo_configdb:/data/configdb
    networks:
      - serve-network
    depends_on:
      - nginx
      
networks:
  serve-network:
    name: custom_serve_network
    
volumes:
  prometheus_data:
  mongo_data:
  mongo_configdb: